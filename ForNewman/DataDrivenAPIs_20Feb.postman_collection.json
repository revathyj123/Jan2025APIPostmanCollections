{
	"info": {
		"_postman_id": "66af4a19-c1dc-4104-8072-65a37845774d",
		"name": "DataDrivenAPIs_20Feb",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41835826"
	},
	"item": [
		{
			"name": "1_CreateUserwithCSV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"const user_id=jsonData.id;\r",
							"pm.variables.set(\"UserID\",user_id);\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the Actual and Expected Data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
							"    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
							"\r",
							"    //fetch the email\r",
							"    const rawBody=pm.request.body.raw;//Request/JSON Body/Json string\r",
							"    //JSON body to JS object\r",
							"    const reqBody=JSON.parse(rawBody)//JSON - interface, parse-method\r",
							"    const email=reqBody.email;\r",
							"    console.log(\"Actual Email = \"+jsonData.email);\r",
							"    console.log(\"Expected Email = \"+email);\r",
							"    //Actual Email vs Expected Email\r",
							"    pm.expect(jsonData.email).to.eql(email);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{tokenID}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    //name, gender, status fetching from user.csv file \r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "2_UpdateUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is user status updated\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newStatus\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{tokenID}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"status\":\"{{newStatus}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/public/v2/users/{{UserID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://gorest.co.in",
			"type": "string"
		},
		{
			"key": "tokenID",
			"value": "Bearer 0b1b6b285e932ba5d7d1e77eae48c27960e81bf6c2c46a5d82ef99b148a4025b",
			"type": "string"
		}
	]
}